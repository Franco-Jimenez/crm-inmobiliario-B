{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww25400\viewh16000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="es">\
<head>\
    <meta charset="UTF-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>CRM Inmobiliario Chile</title>\
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>\
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>\
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>\
    <script src="https://unpkg.com/lucide-react@latest/dist/umd/lucide-react.js"></script>\
    <script src="https://cdn.tailwindcss.com"></script>\
    <style>\
        body \{\
            margin: 0;\
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\
                'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\
                sans-serif;\
        \}\
    </style>\
</head>\
<body>\
    <div id="root"></div>\
\
    <script type="text/babel">\
        const \{ useState, useEffect \} = React;\
        const \{ Search, Plus, Edit, Trash2, Phone, Mail, MapPin, Calendar, DollarSign, Home, Users, Building, TrendingUp, Filter \} = lucide;\
\
        const CRMInmobiliario = () => \{\
            const [activeTab, setActiveTab] = useState('dashboard');\
            const [clientes, setClientes] = useState([\
                \{\
                    id: 1,\
                    nombre: 'Mar\'eda Gonz\'e1lez',\
                    email: 'maria.gonzalez@email.com',\
                    telefono: '+56 9 8765 4321',\
                    tipo: 'Comprador',\
                    presupuesto: 150000000,\
                    zona_interes: 'Providencia',\
                    estado: 'Activo',\
                    fecha_registro: '2024-07-15'\
                \},\
                \{\
                    id: 2,\
                    nombre: 'Carlos Mendoza',\
                    email: 'carlos.mendoza@email.com',\
                    telefono: '+56 9 1234 5678',\
                    tipo: 'Vendedor',\
                    precio_venta: 280000000,\
                    direccion: 'Las Condes',\
                    estado: 'Negociando',\
                    fecha_registro: '2024-07-20'\
                \}\
            ]);\
\
            const [propiedades, setPropiedades] = useState([\
                \{\
                    id: 1,\
                    direccion: 'Av. Providencia 1234, Providencia',\
                    tipo: 'Departamento',\
                    precio: 180000000,\
                    habitaciones: 3,\
                    banos: 2,\
                    metros: 85,\
                    estado: 'Disponible',\
                    propietario: 'Ana Silva',\
                    fecha_ingreso: '2024-07-10'\
                \},\
                \{\
                    id: 2,\
                    direccion: 'Los Leones 567, Las Condes',\
                    tipo: 'Casa',\
                    precio: 350000000,\
                    habitaciones: 4,\
                    banos: 3,\
                    metros: 180,\
                    estado: 'Reservada',\
                    propietario: 'Pedro Ram\'edrez',\
                    fecha_ingreso: '2024-07-18'\
                \}\
            ]);\
\
            const [citas, setCitas] = useState([\
                \{\
                    id: 1,\
                    cliente: 'Mar\'eda Gonz\'e1lez',\
                    propiedad: 'Av. Providencia 1234',\
                    fecha: '2024-08-05',\
                    hora: '15:00',\
                    tipo: 'Visita',\
                    estado: 'Confirmada'\
                \},\
                \{\
                    id: 2,\
                    cliente: 'Carlos Mendoza',\
                    propiedad: 'Los Leones 567',\
                    fecha: '2024-08-06',\
                    hora: '11:00',\
                    tipo: 'Evaluaci\'f3n',\
                    estado: 'Pendiente'\
                \}\
            ]);\
\
            const [showModal, setShowModal] = useState(false);\
            const [modalType, setModalType] = useState('');\
            const [editingItem, setEditingItem] = useState(null);\
            const [searchTerm, setSearchTerm] = useState('');\
\
            // Cargar datos del localStorage al iniciar\
            useEffect(() => \{\
                const savedClientes = localStorage.getItem('crm_clientes');\
                const savedPropiedades = localStorage.getItem('crm_propiedades');\
                const savedCitas = localStorage.getItem('crm_citas');\
\
                if (savedClientes) setClientes(JSON.parse(savedClientes));\
                if (savedPropiedades) setPropiedades(JSON.parse(savedPropiedades));\
                if (savedCitas) setCitas(JSON.parse(savedCitas));\
            \}, []);\
\
            // Guardar datos en localStorage cuando cambien\
            useEffect(() => \{\
                localStorage.setItem('crm_clientes', JSON.stringify(clientes));\
            \}, [clientes]);\
\
            useEffect(() => \{\
                localStorage.setItem('crm_propiedades', JSON.stringify(propiedades));\
            \}, [propiedades]);\
\
            useEffect(() => \{\
                localStorage.setItem('crm_citas', JSON.stringify(citas));\
            \}, [citas]);\
\
            const formatCurrency = (amount) => \{\
                return new Intl.NumberFormat('es-CL', \{\
                    style: 'currency',\
                    currency: 'CLP',\
                \}).format(amount);\
            \};\
\
            const openModal = (type, item = null) => \{\
                setModalType(type);\
                setEditingItem(item);\
                setShowModal(true);\
            \};\
\
            const closeModal = () => \{\
                setShowModal(false);\
                setEditingItem(null);\
            \};\
\
            const handleSave = (formData) => \{\
                if (modalType === 'cliente') \{\
                    if (editingItem) \{\
                        setClientes(clientes.map(c => c.id === editingItem.id ? \{ ...c, ...formData \} : c));\
                    \} else \{\
                        const newCliente = \{\
                            id: Date.now(),\
                            ...formData,\
                            fecha_registro: new Date().toISOString().split('T')[0]\
                        \};\
                        setClientes([...clientes, newCliente]);\
                    \}\
                \} else if (modalType === 'propiedad') \{\
                    if (editingItem) \{\
                        setPropiedades(propiedades.map(p => p.id === editingItem.id ? \{ ...p, ...formData \} : p));\
                    \} else \{\
                        const newPropiedad = \{\
                            id: Date.now(),\
                            ...formData,\
                            fecha_ingreso: new Date().toISOString().split('T')[0]\
                        \};\
                        setPropiedades([...propiedades, newPropiedad]);\
                    \}\
                \} else if (modalType === 'cita') \{\
                    if (editingItem) \{\
                        setCitas(citas.map(c => c.id === editingItem.id ? \{ ...c, ...formData \} : c));\
                    \} else \{\
                        const newCita = \{\
                            id: Date.now(),\
                            ...formData\
                        \};\
                        setCitas([...citas, newCita]);\
                    \}\
                \}\
                closeModal();\
            \};\
\
            const deleteItem = (type, id) => \{\
                if (confirm('\'bfEst\'e1s seguro de que quieres eliminar este elemento?')) \{\
                    if (type === 'cliente') \{\
                        setClientes(clientes.filter(c => c.id !== id));\
                    \} else if (type === 'propiedad') \{\
                        setPropiedades(propiedades.filter(p => p.id !== id));\
                    \} else if (type === 'cita') \{\
                        setCitas(citas.filter(c => c.id !== id));\
                    \}\
                \}\
            \};\
\
            const renderDashboard = () => (\
                <div className="space-y-6">\
                    <h2 className="text-2xl font-bold text-gray-800">Dashboard - Resumen del Negocio</h2>\
                    \
                    \{/* KPIs */\}\
                    <div className="grid grid-cols-1 md:grid-cols-4 gap-6">\
                        <div className="bg-blue-50 p-6 rounded-lg border border-blue-200">\
                            <div className="flex items-center justify-between">\
                                <div>\
                                    <p className="text-blue-600 text-sm font-medium">Clientes Activos</p>\
                                    <p className="text-3xl font-bold text-blue-900">\{clientes.filter(c => c.estado === 'Activo').length\}</p>\
                                </div>\
                                <Users className="h-8 w-8 text-blue-600" />\
                            </div>\
                        </div>\
                        \
                        <div className="bg-green-50 p-6 rounded-lg border border-green-200">\
                            <div className="flex items-center justify-between">\
                                <div>\
                                    <p className="text-green-600 text-sm font-medium">Propiedades Disponibles</p>\
                                    <p className="text-3xl font-bold text-green-900">\{propiedades.filter(p => p.estado === 'Disponible').length\}</p>\
                                </div>\
                                <Home className="h-8 w-8 text-green-600" />\
                            </div>\
                        </div>\
                        \
                        <div className="bg-purple-50 p-6 rounded-lg border border-purple-200">\
                            <div className="flex items-center justify-between">\
                                <div>\
                                    <p className="text-purple-600 text-sm font-medium">Citas Esta Semana</p>\
                                    <p className="text-3xl font-bold text-purple-900">\{citas.length\}</p>\
                                </div>\
                                <Calendar className="h-8 w-8 text-purple-600" />\
                            </div>\
                        </div>\
                        \
                        <div className="bg-orange-50 p-6 rounded-lg border border-orange-200">\
                            <div className="flex items-center justify-between">\
                                <div>\
                                    <p className="text-orange-600 text-sm font-medium">Valor Promedio UF</p>\
                                    <p className="text-2xl font-bold text-orange-900">4.850 UF</p>\
                                </div>\
                                <TrendingUp className="h-8 w-8 text-orange-600" />\
                            </div>\
                        </div>\
                    </div>\
\
                    \{/* Pr\'f3ximas citas */\}\
                    <div className="bg-white rounded-lg shadow-sm border">\
                        <div className="px-6 py-4 border-b">\
                            <h3 className="text-lg font-semibold">Pr\'f3ximas Citas</h3>\
                        </div>\
                        <div className="p-6">\
                            \{citas.slice(0, 3).map(cita => (\
                                <div key=\{cita.id\} className="flex items-center justify-between py-3 border-b last:border-b-0">\
                                    <div>\
                                        <p className="font-medium">\{cita.cliente\}</p>\
                                        <p className="text-sm text-gray-600">\{cita.propiedad\}</p>\
                                    </div>\
                                    <div className="text-right">\
                                        <p className="font-medium">\{cita.fecha\} - \{cita.hora\}</p>\
                                        <span className=\{`inline-block px-2 py-1 rounded-full text-xs $\{\
                                            cita.estado === 'Confirmada' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\
                                        \}`\}>\
                                            \{cita.estado\}\
                                        </span>\
                                    </div>\
                                </div>\
                            ))\}\
                        </div>\
                    </div>\
                </div>\
            );\
\
            const renderClientes = () => (\
                <div className="space-y-6">\
                    <div className="flex justify-between items-center">\
                        <h2 className="text-2xl font-bold text-gray-800">Gesti\'f3n de Clientes</h2>\
                        <button\
                            onClick=\{() => openModal('cliente')\}\
                            className="bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center gap-2 hover:bg-blue-700"\
                        >\
                            <Plus className="h-4 w-4" />\
                            Nuevo Cliente\
                        </button>\
                    </div>\
\
                    <div className="bg-white rounded-lg shadow-sm border">\
                        <div className="p-4 border-b">\
                            <div className="flex gap-4">\
                                <div className="relative flex-1">\
                                    <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />\
                                    <input\
                                        type="text"\
                                        placeholder="Buscar clientes..."\
                                        className="w-full pl-10 pr-4 py-2 border rounded-lg"\
                                        value=\{searchTerm\}\
                                        onChange=\{(e) => setSearchTerm(e.target.value)\}\
                                    />\
                                </div>\
                                <button className="flex items-center gap-2 px-4 py-2 border rounded-lg hover:bg-gray-50">\
                                    <Filter className="h-4 w-4" />\
                                    Filtros\
                                </button>\
                            </div>\
                        </div>\
                        \
                        <div className="overflow-x-auto">\
                            <table className="w-full">\
                                <thead className="bg-gray-50">\
                                    <tr>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Cliente</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Contacto</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Tipo</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Presupuesto/Precio</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Estado</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Acciones</th>\
                                    </tr>\
                                </thead>\
                                <tbody className="divide-y divide-gray-200">\
                                    \{clientes.filter(cliente => \
                                        cliente.nombre.toLowerCase().includes(searchTerm.toLowerCase()) ||\
                                        cliente.email.toLowerCase().includes(searchTerm.toLowerCase())\
                                    ).map(cliente => (\
                                        <tr key=\{cliente.id\} className="hover:bg-gray-50">\
                                            <td className="px-6 py-4">\
                                                <div>\
                                                    <p className="font-medium text-gray-900">\{cliente.nombre\}</p>\
                                                    <p className="text-sm text-gray-500">\{cliente.zona_interes || cliente.direccion\}</p>\
                                                </div>\
                                            </td>\
                                            <td className="px-6 py-4">\
                                                <div className="space-y-1">\
                                                    <div className="flex items-center gap-2">\
                                                        <Mail className="h-4 w-4 text-gray-400" />\
                                                        <span className="text-sm">\{cliente.email\}</span>\
                                                    </div>\
                                                    <div className="flex items-center gap-2">\
                                                        <Phone className="h-4 w-4 text-gray-400" />\
                                                        <span className="text-sm">\{cliente.telefono\}</span>\
                                                    </div>\
                                                </div>\
                                            </td>\
                                            <td className="px-6 py-4">\
                                                <span className=\{`inline-block px-2 py-1 rounded-full text-xs $\{\
                                                    cliente.tipo === 'Comprador' ? 'bg-blue-100 text-blue-800' : 'bg-green-100 text-green-800'\
                                                \}`\}>\
                                                    \{cliente.tipo\}\
                                                </span>\
                                            </td>\
                                            <td className="px-6 py-4">\
                                                <span className="font-medium">\
                                                    \{formatCurrency(cliente.presupuesto || cliente.precio_venta)\}\
                                                </span>\
                                            </td>\
                                            <td className="px-6 py-4">\
                                                <span className=\{`inline-block px-2 py-1 rounded-full text-xs $\{\
                                                    cliente.estado === 'Activo' ? 'bg-green-100 text-green-800' : \
                                                    cliente.estado === 'Negociando' ? 'bg-yellow-100 text-yellow-800' : 'bg-gray-100 text-gray-800'\
                                                \}`\}>\
                                                    \{cliente.estado\}\
                                                </span>\
                                            </td>\
                                            <td className="px-6 py-4">\
                                                <div className="flex gap-2">\
                                                    <button\
                                                        onClick=\{() => openModal('cliente', cliente)\}\
                                                        className="text-blue-600 hover:text-blue-800"\
                                                    >\
                                                        <Edit className="h-4 w-4" />\
                                                    </button>\
                                                    <button \
                                                        onClick=\{() => deleteItem('cliente', cliente.id)\}\
                                                        className="text-red-600 hover:text-red-800"\
                                                    >\
                                                        <Trash2 className="h-4 w-4" />\
                                                    </button>\
                                                </div>\
                                            </td>\
                                        </tr>\
                                    ))\}\
                                </tbody>\
                            </table>\
                        </div>\
                    </div>\
                </div>\
            );\
\
            const renderPropiedades = () => (\
                <div className="space-y-6">\
                    <div className="flex justify-between items-center">\
                        <h2 className="text-2xl font-bold text-gray-800">Gesti\'f3n de Propiedades</h2>\
                        <button\
                            onClick=\{() => openModal('propiedad')\}\
                            className="bg-green-600 text-white px-4 py-2 rounded-lg flex items-center gap-2 hover:bg-green-700"\
                        >\
                            <Plus className="h-4 w-4" />\
                            Nueva Propiedad\
                        </button>\
                    </div>\
\
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">\
                        \{propiedades.map(propiedad => (\
                            <div key=\{propiedad.id\} className="bg-white rounded-lg shadow-sm border overflow-hidden">\
                                <div className="h-48 bg-gray-200 flex items-center justify-center">\
                                    <Building className="h-16 w-16 text-gray-400" />\
                                </div>\
                                <div className="p-6">\
                                    <div className="flex justify-between items-start mb-4">\
                                        <h3 className="font-semibold text-lg">\{propiedad.tipo\}</h3>\
                                        <span className=\{`px-2 py-1 rounded-full text-xs $\{\
                                            propiedad.estado === 'Disponible' ? 'bg-green-100 text-green-800' : \
                                            propiedad.estado === 'Reservada' ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'\
                                        \}`\}>\
                                            \{propiedad.estado\}\
                                        </span>\
                                    </div>\
                                    \
                                    <div className="space-y-2 mb-4">\
                                        <div className="flex items-center gap-2">\
                                            <MapPin className="h-4 w-4 text-gray-400" />\
                                            <span className="text-sm text-gray-600">\{propiedad.direccion\}</span>\
                                        </div>\
                                        <div className="flex items-center gap-2">\
                                            <DollarSign className="h-4 w-4 text-gray-400" />\
                                            <span className="font-bold text-green-600">\{formatCurrency(propiedad.precio)\}</span>\
                                        </div>\
                                    </div>\
                                    \
                                    <div className="grid grid-cols-3 gap-4 mb-4 text-center">\
                                        <div>\
                                            <p className="text-xs text-gray-500">Habitaciones</p>\
                                            <p className="font-semibold">\{propiedad.habitaciones\}</p>\
                                        </div>\
                                        <div>\
                                            <p className="text-xs text-gray-500">Ba\'f1os</p>\
                                            <p className="font-semibold">\{propiedad.banos\}</p>\
                                        </div>\
                                        <div>\
                                            <p className="text-xs text-gray-500">m\'b2</p>\
                                            <p className="font-semibold">\{propiedad.metros\}</p>\
                                        </div>\
                                    </div>\
                                    \
                                    <div className="flex gap-2">\
                                        <button\
                                            onClick=\{() => openModal('propiedad', propiedad)\}\
                                            className="flex-1 bg-blue-50 text-blue-600 py-2 px-4 rounded-lg hover:bg-blue-100 flex items-center justify-center gap-2"\
                                        >\
                                            <Edit className="h-4 w-4" />\
                                            Editar\
                                        </button>\
                                        <button\
                                            onClick=\{() => deleteItem('propiedad', propiedad.id)\}\
                                            className="bg-red-50 text-red-600 py-2 px-4 rounded-lg hover:bg-red-100"\
                                        >\
                                            <Trash2 className="h-4 w-4" />\
                                        </button>\
                                    </div>\
                                </div>\
                            </div>\
                        ))\}\
                    </div>\
                </div>\
            );\
\
            const renderCitas = () => (\
                <div className="space-y-6">\
                    <div className="flex justify-between items-center">\
                        <h2 className="text-2xl font-bold text-gray-800">Agenda de Citas</h2>\
                        <button\
                            onClick=\{() => openModal('cita')\}\
                            className="bg-purple-600 text-white px-4 py-2 rounded-lg flex items-center gap-2 hover:bg-purple-700"\
                        >\
                            <Plus className="h-4 w-4" />\
                            Nueva Cita\
                        </button>\
                    </div>\
\
                    <div className="bg-white rounded-lg shadow-sm border">\
                        <div className="overflow-x-auto">\
                            <table className="w-full">\
                                <thead className="bg-gray-50">\
                                    <tr>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Cliente</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Propiedad</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Fecha y Hora</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Tipo</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Estado</th>\
                                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Acciones</th>\
                                    </tr>\
                                </thead>\
                                <tbody className="divide-y divide-gray-200">\
                                    \{citas.map(cita => (\
                                        <tr key=\{cita.id\} className="hover:bg-gray-50">\
                                            <td className="px-6 py-4 font-medium">\{cita.cliente\}</td>\
                                            <td className="px-6 py-4">\{cita.propiedad\}</td>\
                                            <td className="px-6 py-4">\
                                                <div>\
                                                    <p className="font-medium">\{cita.fecha\}</p>\
                                                    <p className="text-sm text-gray-500">\{cita.hora\}</p>\
                                                </div>\
                                            </td>\
                                            <td className="px-6 py-4">\
                                                <span className="inline-block px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800">\
                                                    \{cita.tipo\}\
                                                </span>\
                                            </td>\
                                            <td className="px-6 py-4">\
                                                <span className=\{`inline-block px-2 py-1 rounded-full text-xs $\{\
                                                    cita.estado === 'Confirmada' ? 'bg-green-100 text-green-800' : \
                                                    cita.estado === 'Pendiente' ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'\
                                                \}`\}>\
                                                    \{cita.estado\}\
                                                </span>\
                                            </td>\
                                            <td className="px-6 py-4">\
                                                <div className="flex gap-2">\
                                                    <button\
                                                        onClick=\{() => openModal('cita', cita)\}\
                                                        className="text-blue-600 hover:text-blue-800"\
                                                    >\
                                                        <Edit className="h-4 w-4" />\
                                                    </button>\
                                                    <button \
                                                        onClick=\{() => deleteItem('cita', cita.id)\}\
                                                        className="text-red-600 hover:text-red-800"\
                                                    >\
                                                        <Trash2 className="h-4 w-4" />\
                                                    </button>\
                                                </div>\
                                            </td>\
                                        </tr>\
                                    ))\}\
                                </tbody>\
                            </table>\
                        </div>\
                    </div>\
                </div>\
            );\
\
            const FormModal = () => \{\
                const [formData, setFormData] = useState(\{\});\
\
                useEffect(() => \{\
                    if (editingItem) \{\
                        setFormData(editingItem);\
                    \} else \{\
                        setFormData(\{\});\
                    \}\
                \}, [editingItem]);\
\
                const handleInputChange = (field, value) => \{\
                    setFormData(prev => (\{\
                        ...prev,\
                        [field]: value\
                    \}));\
                \};\
\
                const handleSubmit = (e) => \{\
                    e.preventDefault();\
                    handleSave(formData);\
                \};\
\
                if (!showModal) return null;\
\
                return (\
                    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">\
                        <div className="bg-white rounded-lg p-6 w-full max-w-md mx-4">\
                            <h3 className="text-lg font-semibold mb-4">\
                                \{editingItem ? 'Editar' : 'Nuevo'\} \{modalType === 'cliente' ? 'Cliente' : modalType === 'propiedad' ? 'Propiedad' : 'Cita'\}\
                            </h3>\
                            \
                            <form onSubmit=\{handleSubmit\} className="space-y-4">\
                                \{modalType === 'cliente' && (\
                                    <>\
                                        <input\
                                            type="text"\
                                            placeholder="Nombre completo"\
                                            className="w-full p-3 border rounded-lg"\
                                            value=\{formData.nombre || ''\}\
                                            onChange=\{(e) => handleInputChange('nombre', e.target.value)\}\
                                            required\
                                        />\
                                        <input\
                                            type="email"\
                                            placeholder="Email"\
                                            className="w-full p-3 border rounded-lg"\
                                            value=\{formData.email || ''\}\
                                            onChange=\{(e) => handleInputChange('email', e.target.value)\}\
                                            required\
                                        />\
                                        <input\
                                            type="tel"\
                                            placeholder="Tel\'e9fono"\
                                            className="w-full p-3 border rounded-}